/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 0.13.4 - 2015-09-03
 * License: MIT
 */
angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.pagination"]),angular.module("ui.bootstrap.tpls",["template/pagination/pager.html","template/pagination/pagination.html"]),angular.module("ui.bootstrap.pagination",[]).controller("PaginationController",["$scope","$attrs","$parse",function(e,t,a){var n=this,i={$setViewValue:angular.noop},r=t.numPages?a(t.numPages).assign:angular.noop;this.init=function(l,o){i=l,this.config=o,i.$render=function(){n.render()},t.itemsPerPage?e.$parent.$watch(a(t.itemsPerPage),function(t){n.itemsPerPage=parseInt(t,10),e.totalPages=n.calculateTotalPages()}):this.itemsPerPage=o.itemsPerPage,e.$watch("totalItems",function(){e.totalPages=n.calculateTotalPages()}),e.$watch("totalPages",function(t){r(e.$parent,t),e.page>t?e.selectPage(t):i.$render()})},this.calculateTotalPages=function(){var t=this.itemsPerPage<1?1:Math.ceil(e.totalItems/this.itemsPerPage);return Math.max(t||0,1)},this.render=function(){e.page=parseInt(i.$viewValue,10)||1},e.selectPage=function(t,a){a&&a.preventDefault();var n=!e.ngDisabled||!a;n&&e.page!==t&&t>0&&t<=e.totalPages&&(a&&a.target&&a.target.blur(),i.$setViewValue(t),i.$render())},e.getText=function(t){return e[t+"Text"]||n.config[t+"Text"]},e.noPrevious=function(){return 1===e.page},e.noNext=function(){return e.page===e.totalPages}}]).constant("paginationConfig",{itemsPerPage:10,boundaryLinks:!1,directionLinks:!0,firstText:"First",previousText:"Previous",nextText:"Next",lastText:"Last",rotate:!0}).directive("pagination",["$parse","paginationConfig",function(e,t){return{restrict:"EA",scope:{totalItems:"=",firstText:"@",previousText:"@",nextText:"@",lastText:"@",ngDisabled:"="},require:["pagination","?ngModel"],controller:"PaginationController",controllerAs:"pagination",templateUrl:function(e,t){return t.templateUrl||"template/pagination/pagination.html"},replace:!0,link:function(a,n,i,r){function l(e,t,a){return{number:e,text:t,active:a}}function o(e,t){var a=[],n=1,i=t,r=angular.isDefined(p)&&t>p;r&&(u?(n=Math.max(e-Math.floor(p/2),1),i=n+p-1,i>t&&(i=t,n=i-p+1)):(n=(Math.ceil(e/p)-1)*p+1,i=Math.min(n+p-1,t)));for(var o=n;i>=o;o++){var s=l(o,o,o===e);a.push(s)}if(r&&!u){if(n>1){var g=l(n-1,"...",!1);a.unshift(g)}if(t>i){var c=l(i+1,"...",!1);a.push(c)}}return a}var s=r[0],g=r[1];if(g){var p=angular.isDefined(i.maxSize)?a.$parent.$eval(i.maxSize):t.maxSize,u=angular.isDefined(i.rotate)?a.$parent.$eval(i.rotate):t.rotate;a.boundaryLinks=angular.isDefined(i.boundaryLinks)?a.$parent.$eval(i.boundaryLinks):t.boundaryLinks,a.directionLinks=angular.isDefined(i.directionLinks)?a.$parent.$eval(i.directionLinks):t.directionLinks,s.init(g,t),i.maxSize&&a.$parent.$watch(e(i.maxSize),function(e){p=parseInt(e,10),s.render()});var c=s.render;s.render=function(){c(),a.page>0&&a.page<=a.totalPages&&(a.pages=o(a.page,a.totalPages))}}}}}]).constant("pagerConfig",{itemsPerPage:10,previousText:"« Previous",nextText:"Next »",align:!0}).directive("pager",["pagerConfig",function(e){return{restrict:"EA",scope:{totalItems:"=",previousText:"@",nextText:"@",ngDisabled:"="},require:["pager","?ngModel"],controller:"PaginationController",controllerAs:"pagination",templateUrl:function(e,t){return t.templateUrl||"template/pagination/pager.html"},replace:!0,link:function(t,a,n,i){var r=i[0],l=i[1];l&&(t.align=angular.isDefined(n.align)?t.$parent.$eval(n.align):e.align,r.init(l,e))}}}]),angular.module("template/pagination/pager.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pager.html",'<ul class="pager">\n  <li ng-class="{disabled: noPrevious()||ngDisabled, previous: align}"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext()||ngDisabled, next: align}"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n</ul>\n')}]),angular.module("template/pagination/pagination.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pagination.html",'<ul class="pagination">\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-first"><a href ng-click="selectPage(1, $event)">{{::getText(\'first\')}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-prev"><a href ng-click="selectPage(page - 1, $event)">{{::getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active,disabled: ngDisabled&&!page.active}" class="pagination-page"><a href ng-click="selectPage(page.number, $event)">{{page.text}}</a></li>\n  <li ng-if="::directionLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-next"><a href ng-click="selectPage(page + 1, $event)">{{::getText(\'next\')}}</a></li>\n  <li ng-if="::boundaryLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-last"><a href ng-click="selectPage(totalPages, $event)">{{::getText(\'last\')}}</a></li>\n</ul>\n')}]);